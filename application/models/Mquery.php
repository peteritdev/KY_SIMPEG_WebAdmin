<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');	#akses ke semua tabel di databaseclass Mquery extends CI_Model{		function __construct()	{		parent::__construct();	}	public function validateAdminLogin( $user_login, $user_password ){		$strSQL 			= "SELECT COUNT(0) AS row_count							   FROM `ms_issueruseraccess`							   WHERE " . $this->converter->putDECRYPT("userLogin") . " LIKE ?							   AND userPassword LIKE md5(?)							   AND status = 1";							   //echo $strSQL;		$q 					= $this->db->query($strSQL, array( $user_login, $user_password ));		return $q->result();	}	public function validateManagementLogin( $userLogin, $userPassword ){		$strSQL 			= "SELECT COUNT(0) AS row_count							   FROM `ms_customers`							   WHERE " . $this->converter->putDECRYPT("userLogin") . " LIKE ?							   AND userPassword LIKE md5(CONCAT(?,'" . $this->converter->getMD5Key() . "'))							   AND customerId IN (1,3,11,31)							   AND status = 1";							   //echo $strSQL;		$q 					= $this->db->query($strSQL, array( $userLogin, $userPassword ));		return $q->result();	}	public function getMemberDetail( $userLogin, $userPassword ){		$strSQL 			= "SELECT customerId,									  " . $this->converter->putDECRYPT("customerName") . " AS customerName							   FROM `ms_customers`							   WHERE " . $this->converter->putDECRYPT("userLogin") . " LIKE ?							   AND userPassword LIKE md5(CONCAT(?,'" . $this->converter->getMD5Key() . "'))							   AND customerId IN (1,3,11,31)							   AND status = 1";							   //echo $strSQL;		$q 					= $this->db->query($strSQL, array( $userLogin, $userPassword ));		return $q->result();	}	public function getDetailUser( $userLogin, $userPassword ){		$strSQL 			= " SELECT *							   	FROM `ms_issueruseraccess`							   	WHERE " . $this->converter->putDECRYPT("userLogin") . " LIKE ?							    AND userPassword LIKE md5(?)							   	AND status = 1";		$q 					= $this->db->query($strSQL, array( $userLogin, $userPassword ));		return $q->result();	}	public function getMerchantData( $userId, $roleId ){		$where 				= "";		$arrWhere 			= array();		if( $roleId == 3 ){			$where 			= " AND ( m.createdUser = ? ) ";			$arrWhere[] 	= $userId;		}		$strSQL 			= " SELECT m.merchantId,									   a.accountNumber,									   m.logo,									   m.icon40x60,									   " . $this->converter->putDECRYPT("email") . " AS email,									   " . $this->converter->putDECRYPT("contactName") . " AS contactName,									   " . $this->converter->putDECRYPT("contactPhone") . " AS contactPhone,									   m.merchantName,									   m.status,									   m.merchantRebateType,									   m.merchantRebateValue,									   m.created,									   ia.userName,									   m.pksFile								FROM `ms_merchants` m INNER JOIN ms_accounts a									ON m.merchantId = a.memberId									LEFT JOIN ms_issueruseraccess ia ON ia.userId = m.createdUser								WHERE a.accountCategory = 'merchant' " . $where . "								ORDER BY m.created DESC";		$q 					= $this->db->query($strSQL, $arrWhere);		return $q->result();	}	public function getCustomerDataByEmail( $email ){		$strSQL 			= " SELECT " . $this->converter->putDECRYPT("customerName") . " AS name,									   customerPhoto AS photo,									   " . $this->converter->putDECRYPT("customerPhoneNumber") . " AS phoneNumber,									   c.status,									   a.accountId								FROM `ms_customers` c INNER JOIN `ms_accounts` a ON c.customerId = a.memberId 								WHERE (a.accountNumber LIKE ? )								AND a.accountCategory = 'customer'";								//echo $strSQL;		$q 					= $this->db->query( $strSQL, array( $email ) );		return $q->result();	}	public function getAdvertiseData( $keyword, $startDate, $endDate ){		$where 				= " WHERE (1=1) AND CURDATE() >= ma.startDate ";		$arrWhere			= array();		if( $keyword != '' ){			$where			.= " AND companyName LIKE ? ";			$arrWhere[] 	= $keyword;		}		if( $startDate != '' && $endDate != '' ){			$where			.= " AND ( ? BETWEEN ma.startDate AND ma.endDate ) OR ( ? BETWEEN ma.startDate AND ma.endDate ) ";			$arrWhere[]     = $startDate;			$arrWhere[] 	= $endDate;		}		$strSQL 			= " SELECT ma.advertiseId,									   ma.file,									   ma.sequence,									   DATE_FORMAT(ma.startDate,'%m/%d/%Y') AS startDate,									   DATE_FORMAT(ma.endDate,'%m/%d/%Y') AS endDate,									   CASE WHEN CURDATE() <= ma.endDate THEN 1 ELSE 0 END AS statusPeriod,									   ma.created,									   mi.userName,									   mc.companyName,									   ma.status,									   ma.companyId,									   ma.advertiseType,									   ma.advertiseRebate		 					    FROM ms_advertises ma INNER JOIN ms_companies mc 		 					    	ON ma.companyId = mc.companyId		 					    		LEFT JOIN ms_issueruseraccess mi ON ma.createdUser = mi.userId " . $where . "		 					    ORDER BY sequence ASC";		$q 					= $this->db->query( $strSQL, $arrWhere );		return $q->result();	}	public function getAdvertiserData( $keyword, $startDate, $endDate ){		$where 				= " WHERE (1=1) ";		$arrWhere			= array();		if( $keyword != '' ){			$where			.= " AND companyName LIKE ? ";			$arrWhere[] 	= $keyword;		}		$strSQL 			= " SELECT mc.*,									   mi.userName		 					    FROM ms_companies mc		 					    		LEFT JOIN ms_issueruseraccess mi ON mc.createdUser = mi.userId " . $where . "		 					    ORDER BY mc.created DESC";		$q 					= $this->db->query( $strSQL, $arrWhere );		return $q->result();	}	public function getEVoucherData( $keyword ){		$where 				= " WHERE (1=1) AND ep.endDate >= CURDATE() ";		$arrWhere			= array();		if( $keyword != '' ){			$where			.= " AND ( productName LIKE ? OR merchantName LIKE ? ) ";			$arrWhere[0] 	= $keyword;			$arrWhere[1] 	= $keyword;		}		$strSQL 			= " SELECT ep.productName,									   ep.photo,									   ep.voucherValue,									   ep.startDate,									   ep.endDate,									   m.merchantName,									   mi.userName,									   ep.created,									   ep.status,									   ep.voucherId,									   ep.merchantId,									   CONCAT( DATE_FORMAT( ep.startDate, '%m/%d/%Y' ), ' - ', DATE_FORMAT( ep.endDate, '%m/%d/%Y' )) AS period		 					    FROM ms_evoucherproducts ep INNER JOIN ms_merchants m		 					    	ON ep.merchantId = m.merchantId		 					    		LEFT JOIN ms_issueruseraccess mi ON ep.createdUser = mi.userId		 					    " . $where . "		 					    AND ep.isDelete = 0		 					    ORDER BY ep.created DESC";		$q 					= $this->db->query( $strSQL, $arrWhere );		return $q->result();	}	public function getCustomerEVoucher( $eVoucherId ){		$strSQL 			= " SELECT " . $this->converter->putDECRYPT("customerName") . " AS customerName,									   a.accountNumber,									   ec.voucherCode,									   ec.startDate,									   ec.endDate,									   ec.status,									   ec.voucherCustomerId								FROM `ms_customers` c INNER JOIN `ms_accounts` a									ON c.customerId = a.memberId										INNER JOIN `ms_evouchercustomers` ec											ON ec.customerId = c.customerId								WHERE a.accountCategory = 'customer'								AND ec.voucherId = ? ";		$q 					= $this->db->query( $strSQL, array( $eVoucherId ) );		return $q->result();	}	public function getCustomerDetailByAccountNumber( $accountNumber ){		$strSQL 			= " SELECT " . $this->converter->putDECRYPT("customerName") . " AS customerName,								       " . $this->converter->putDECRYPT("email") . " AS email,								       " . $this->converter->putDECRYPT("customerPhoneNumber") . " AS phoneNumber,								       c.customerId 							    FROM  `ms_customers` c INNER JOIN `ms_accounts` a							    	ON c.customerId = a.memberId							    WHERE a.accountCategory = 'customer'							    AND a.accountNumber LIKE ?";		$q 					= $this->db->query( $strSQL, array( $accountNumber ) );		return $q->result();	}	public function getMailTemplate( $settingPurpose ){		$strSQL = " SELECT value		    		FROM ms_settings		    		WHERE settingPurpose LIKE ? ";		$q 		= $this->db->query( $strSQL, array( $settingPurpose ) );		return $q->result();	}	public function getUserData( $keyword ){		$where 				= " (1=1) ";		$arrWhere 			= array();		if( $keyword <> '' ){			$where 			.= " AND userName LIKE ? ";			$arrWhere[] 	= $keyword;		}		$strSQL 			= " SELECT u.userId,									   r.roleId,									   u.userName,									   " . $this->converter->putDECRYPT("userLogin") . " AS userLogin,									   r.roleName,									   u.`status`,									   u.created								FROM `ms_issueruseraccess` u INNER JOIN `ms_issueruserroles` r ON u.roleId = r.roleId								WHERE " . $where . "								ORDER BY u.created DESC ";		$q 					= $this->db->query($strSQL, $arrWhere);		return $q->result();	}	public function getAESEncrypted( $value ){		$strSQL 			= " SELECT " . $this->converter->putENCRYPT($value) . " AS value";		$q 					= $this->db->query($strSQL, array());		return $q->result();	}	public function getMerchantByMerchantId( $merchantId ){		$where 				= " (1=1) ";		$arrWhere 			= array();		if( $merchantId <> '' ){			$where 			.= " AND ( m.merchantId = ? ) ";			$arrWhere[] 	= $merchantId;		}		$strSQL 			= " SELECT m.merchantName,									   " . $this->converter->putDECRYPT("email") . " AS email,									   a.accountNumber								FROM `ms_merchants` m INNER JOIN `ms_accounts` a									ON m.merchantId = a.memberId								WHERE " . $where . "								AND a.accountCategory LIKE 'merchant'";		$q 					= $this->db->query($strSQL, $arrWhere);		return $q->result();	}	public function getEventData( $keyword,								  $startDate,								  $endDate ){		$where 				= " (1=1) ";		$arrWhere 			= array();		if( $startDate != '' && $endDate != '' ){			$where			= " AND ( (startDate BETWEEN ? AND ?) OR ( endDate BETWEEN ? AND ? ) )";			$arrWhere		= array( $startDate, $endDate, $startDate, $endDate );		}else if( $startDate != '' && $endDate == '' ){			$where 			= " AND startDate = ? ";			$arrWhere[] 	= $startDate;		}		if( $keyword != '' ){			$where 			= " AND eventCode LIKE ? OR eventName LIKE ?";			$arrWhere[] 	= $keyword;			$arrWhere[] 	= $keyword;		}		$strSQL 			= " SELECT eventId,									   eventCode,									   eventName,									   eventType,									   status,									   startDate,									   endDate,									   CONCAT( DATE_FORMAT( startDate, '%m/%d/%Y' ), ' - ', DATE_FORMAT( endDate, '%m/%d/%Y' )) AS period								FROM ms_events								WHERE " . $where;		$q 					= $this->db->query( $strSQL, $arrWhere );		return $q->result();	}}